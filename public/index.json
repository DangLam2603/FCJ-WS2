[
{
	"uri": "//localhost:1313/5-exportfindingtos3/5.1-settingsfrequecy/",
	"title": "Create AMI for App Tier",
	"tags": [],
	"description": "",
	"content": "Why do we need AMIs? Reproduce configurations easily - Once you have an instance configured the way you want, with all necessary software, settings etc., you can create an AMI from it. Then launching new instances from that AMI ensures all instances have the same baseline configuration automatically. Standardize environments - AMIs help maintain consistency across your environments. For example, you may have an AMI configured for a web server role that contains the necessary web server software and configurations. All new web server instances would use this standardized AMI. Backup and recovery - AMIs act as machine snapshots that can be used for backup, disaster recovery or to reproduce instances that may have failed. If an existing instance fails or needs to be replaced, launching a new one from the AMI is quicker than reconfiguring from scratch. Auto scaling - When using auto scaling groups to dynamically scale your fleet size based on demand, AMIs ensure all new instances added by auto scaling have the required configuration already in place. Create AMI from EC2 Instance Access EC2 service:\nChoose Instances from the sidebar Select instance My App Server 1 Click Actions, then click Image and template and choose Create image In the create image interface:\nFill in Image name with AppTierImage Fill in Image description with App tier Scroll down to the bottom and click Create image "
},
{
	"uri": "//localhost:1313/2-preparationsteps/2.1-createkmskey/",
	"title": "Create KMS key",
	"tags": [],
	"description": "",
	"content": "Create KMS encrypted keys Access your AWS account and Search for KMS (Key Management Service). Right-click to \u0026ldquo;Create Key\u0026rdquo; For the configurtion, select \u0026ldquo;Symmetric\u0026rdquo; and \u0026ldquo;Encrypt and Decrypt\u0026rdquo; In the Advance options, select \u0026ldquo;KMS key\u0026rdquo; and Single-Region Key while we want to use this key in the same region in the workshop. Give the KMS key an Alias custom name: Specify the admin permission for KMS access: Define the usage of the KMS Key for: Review the Key Policy KMS key created successfull In the Key Policy step, you can retain the default configuration provided when the KMS key is created. We will make the necessary modifications to this part later as we continue the project.\n"
},
{
	"uri": "//localhost:1313/4-setupnotification/4.1-createsns/",
	"title": "Create SNS",
	"tags": [],
	"description": "",
	"content": "Create SNS to send email In this section, we will config a Email service using SNS topic.\nCreate Topic Navigate to AWS console, Search for SNS sevice. Select Create a Topic. In the Detail section, select Standard type and paste guardduty-topic in the name part. Then, Click Create Topic Create and Subscribe subscription Navigate to left sidebar and select Topic: Choose the following topic that we just created the select subscription and click create subscription\nIn the Details section, select Email on the Protocol part Next, specify the email that will recieve the notification from SNS Click Create Subscription Completed create subscription. After you create subscription, the following status will be pending to confirm. You will recieve a confirmation email base on the one you provide above.\nConfirm Email Email Confirm successully. Status Update "
},
{
	"uri": "//localhost:1313/3-guardduty/3.1-malwareprotections3/",
	"title": "Enable Malware Protection For S3",
	"tags": [],
	"description": "",
	"content": "Enable New Feature Find and access the Amazon GuardDuty service Select the S3 bucket that need protection You can choose \u0026ldquo;Object with a specific prefix\u0026rdquo; in order to custom prefix file in your bucket. In this project, we will scan all the files that in the bucket.\nChoose the s3-raw-gd options In the Tag Scan Object section:\nchoose Tag Objects: this allow GuardDuty write scan status into tag section in S3 Objetcs In the Permission section, review the Policy and Trust Relationship.\nPolicy {\r\u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\r\u0026#34;Statement\u0026#34;: [\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowManagedRuleToSendS3EventsToGuardDuty\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;events:PutRule\u0026#34;,\r\u0026#34;events:DeleteRule\u0026#34;,\r\u0026#34;events:PutTargets\u0026#34;,\r\u0026#34;events:RemoveTargets\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:events:ap-southeast-1:381492162967:rule/DO-NOT-DELETE-AmazonGuardDutyMalwareProtectionS3*\u0026#34;\r],\r\u0026#34;Condition\u0026#34;: {\r\u0026#34;StringLike\u0026#34;: {\r\u0026#34;events:ManagedBy\u0026#34;: \u0026#34;malware-protection-plan.guardduty.amazonaws.com\u0026#34;\r}\r}\r},\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowGuardDutyToMonitorEventBridgeManagedRule\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;events:DescribeRule\u0026#34;,\r\u0026#34;events:ListTargetsByRule\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:events:ap-southeast-1:381492162967:rule/DO-NOT-DELETE-AmazonGuardDutyMalwareProtectionS3*\u0026#34;\r]\r},\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowPostScanTag\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;s3:PutObjectTagging\u0026#34;,\r\u0026#34;s3:GetObjectTagging\u0026#34;,\r\u0026#34;s3:PutObjectVersionTagging\u0026#34;,\r\u0026#34;s3:GetObjectVersionTagging\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:s3:::\u0026lt;bucket_name\u0026gt;/*\u0026#34;\r]\r},\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowEnableS3EventBridgeEvents\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;s3:PutBucketNotification\u0026#34;,\r\u0026#34;s3:GetBucketNotification\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:s3:::\u0026lt;bucket_name\u0026gt;\u0026#34;\r]\r},\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowPutValidationObject\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;s3:PutObject\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:s3:::\u0026lt;bucket_name\u0026gt;/malware-protection-resource-validation-object\u0026#34;\r]\r},\r{\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;s3:ListBucket\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:s3:::\u0026lt;bucket_name\u0026gt;\u0026#34;\r]\r},\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowMalwareScan\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;s3:GetObject\u0026#34;,\r\u0026#34;s3:GetObjectVersion\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:s3:::\u0026lt;bucket_name\u0026gt;/*\u0026#34;\r]\r},\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowDecryptForMalwareScan\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;kms:GenerateDataKey\u0026#34;,\r\u0026#34;kms:Decrypt\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:kms:ap-southeast-1:381492162967:key/\u0026lt;key_id\u0026gt;\u0026#34;,\r\u0026#34;Condition\u0026#34;: {\r\u0026#34;StringLike\u0026#34;: {\r\u0026#34;kms:ViaService\u0026#34;: \u0026#34;s3.*.amazonaws.com\u0026#34;\r}\r}\r}\r]\r} Trusted Relationship: {\r\u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\r\u0026#34;Statement\u0026#34;: [\r{\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Principal\u0026#34;: {\r\u0026#34;Service\u0026#34;: \u0026#34;malware-protection-plan.guardduty.amazonaws.com\u0026#34;\r},\r\u0026#34;Action\u0026#34;: \u0026#34;sts:AssumeRole\u0026#34;\r}\r]\r} Make sure to save both the permissions details for later, and then continue to the next parts.\n"
},
{
	"uri": "//localhost:1313/1-introduce/1.1-introduce-to-amazon-guardduty/",
	"title": "Introduce to Amazon GuardDuty",
	"tags": [],
	"description": "",
	"content": "Explaination of Amazon GuardDuty Amazon GuardDuty is a threat detection service that continuously monitors your AWS environment for suspicious or malicious activity. It uses machine learning, monitoring detection, and integrated threat intelligence to detect and alert you about potential threats in AWS enviroment like Amazon S3, EC2 Instances.\nUse Cases:\nProtecting S3 Buckets: Detecting suspicious data, files or the storage of malware in S3. Protecting EC2 Instances: Identifying instances used for crypto mining or connecting to suspicious IP addresses. Monitoring IAM Role Activity: Spotting anomalies in role access, like attempts to escalate privileges or access sensitive resources. "
},
{
	"uri": "//localhost:1313/1-introduce/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": "Introduction to architecture In this workshop, we will explore the capabilities of AWS GuardDuty in securing your S3 bucket by integrating it with SNS and triggering events in EventBridge to alert the Admin for immediate action.\nThis architecture includes:\nEnable Guard Duty for S3 malware protection. Set-up SNS, EventBridge rules for notification via email. Set-up IAM roles, KMS for security. Export Findings to S3 Bucket. Advantages of implementing this architecture:\nSecurity: this architecture helps us alarm action imediately if there are un-protected files in the S3 Bucket also AWS environment in general. Real-time Threat Detection: AWS GuardDuty continuously monitors your S3 bucket for malicious or unauthorized access, helping detect threats in real-time without manual intervention. Automated Event Triggering: When GuardDuty detects a suspicious event, it triggers an event in Amazon EventBridge, which allows for the automatic handling of these findings. In this workshop, we will send custom email via SNS. "
},
{
	"uri": "//localhost:1313/",
	"title": "Malware Protection for S3 using GuardDuty ",
	"tags": [],
	"description": "",
	"content": "Malware Protection for S3 with GuardDuty Overview In this workshop, we will demonstrate how AWS GuardDuty can secure your S3 bucket by identifying and remediating malicious files. You will learn how to automatically detect threats, export encrypted GuardDuty findings to S3 bucket and set up real-time alerts in prime periods using EventBridge and SNS to inform administrators.\nContent Introduction Preparation steps Amazon GuardDuty Set-up Notification Export Findings to S3 Demo Clean up resources "
},
{
	"uri": "//localhost:1313/6-demo/6.1-uploadmalwarefiletos3/",
	"title": "Update Nginx Configuration File",
	"tags": [],
	"description": "",
	"content": "Update Nginx Configuration File Open the nginx.conf file from the cloned project Then change line 58 in the file to the DNS Name of the app-tier-internal-lb load balancer "
},
{
	"uri": "//localhost:1313/4-setupnotification/4.2-createeventbridge/",
	"title": "Connect to EC2 instance",
	"tags": [],
	"description": "",
	"content": "Connect to EC2 instance On the EC2 instances interface, select the instance you just created and click Connect Switch to the Session Manager tab and click Connect Successfully connect to the instance Run the command sudo -su ec2-user to switch from user to ec2-user, and have root administrative rights for the instance Then run the command ping 8.8.8.8 (IP address of Google’s DNS server) to test whether our instance can connect to the outside internet through igw or not "
},
{
	"uri": "//localhost:1313/3-guardduty/3.2-createpolicyprotection/",
	"title": "Create IAM Protection Policy ",
	"tags": [],
	"description": "",
	"content": "Overview In the previous step, we have create and modify the malware protection and recieve a JSON Policy. Now let custom IAM Policy to make this works!\nIn the AWS Console interface, search and select IAM In the left-side navigate bar, select Policies and choose Create Policy In the Specific Permission section: Select JSON options Paste the previous Permission Policy in 3.1 sections {\r\u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\r\u0026#34;Statement\u0026#34;: [\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowManagedRuleToSendS3EventsToGuardDuty\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;events:PutRule\u0026#34;,\r\u0026#34;events:DeleteRule\u0026#34;,\r\u0026#34;events:PutTargets\u0026#34;,\r\u0026#34;events:RemoveTargets\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:events:ap-southeast-1:381492162967:rule/DO-NOT-DELETE-AmazonGuardDutyMalwareProtectionS3*\u0026#34;\r],\r\u0026#34;Condition\u0026#34;: {\r\u0026#34;StringLike\u0026#34;: {\r\u0026#34;events:ManagedBy\u0026#34;: \u0026#34;malware-protection-plan.guardduty.amazonaws.com\u0026#34;\r}\r}\r},\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowGuardDutyToMonitorEventBridgeManagedRule\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;events:DescribeRule\u0026#34;,\r\u0026#34;events:ListTargetsByRule\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:events:ap-southeast-1:381492162967:rule/DO-NOT-DELETE-AmazonGuardDutyMalwareProtectionS3*\u0026#34;\r]\r},\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowPostScanTag\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;s3:PutObjectTagging\u0026#34;,\r\u0026#34;s3:GetObjectTagging\u0026#34;,\r\u0026#34;s3:PutObjectVersionTagging\u0026#34;,\r\u0026#34;s3:GetObjectVersionTagging\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:s3:::\u0026lt;bucket_name\u0026gt;/*\u0026#34;\r]\r},\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowEnableS3EventBridgeEvents\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;s3:PutBucketNotification\u0026#34;,\r\u0026#34;s3:GetBucketNotification\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:s3:::\u0026lt;bucket_name\u0026gt;\u0026#34;\r]\r},\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowPutValidationObject\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;s3:PutObject\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:s3:::\u0026lt;bucket_name\u0026gt;/malware-protection-resource-validation-object\u0026#34;\r]\r},\r{\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;s3:ListBucket\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:s3:::\u0026lt;bucket_name\u0026gt;\u0026#34;\r]\r},\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowMalwareScan\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;s3:GetObject\u0026#34;,\r\u0026#34;s3:GetObjectVersion\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:s3:::\u0026lt;bucket_name\u0026gt;/*\u0026#34;\r]\r},\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;AllowDecryptForMalwareScan\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;kms:GenerateDataKey\u0026#34;,\r\u0026#34;kms:Decrypt\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:kms:ap-southeast-1:381492162967:key/\u0026lt;key_id\u0026gt;\u0026#34;,\r\u0026#34;Condition\u0026#34;: {\r\u0026#34;StringLike\u0026#34;: {\r\u0026#34;kms:ViaService\u0026#34;: \u0026#34;s3.*.amazonaws.com\u0026#34;\r}\r}\r}\r]\r} 4. Next to Review and Create step,choose a policy name in the Policy Details, we will go for pl-gd-s3-raw 5. Review the Policy:\nEventBridge: Limited access with List, Read, and Write permissions. It has conditions to manage events from Amazon GuardDuty related to malware protection. KMS (Key Management Service): Write permissions are provided with restrictions based on key IDs and regions, and must be accessed through the S3 service. S3 (Simple Storage Service): List, Read, Write, and Tagging permissions, with no specific conditions applied. Create Policy Complete create policy "
},
{
	"uri": "//localhost:1313/2-preparationsteps/2.2-creates3bucket/",
	"title": "Create S3 Bucket",
	"tags": [],
	"description": "",
	"content": "Create S3 Bucket Access the AWS interface, find the S3 service and then click to select In the S3 interface, click Create bucket In the Create bucket interface: AWS Region select Singapore ap-southeast-1 Bucket name enter s3-raw-gd Scroll down to the bottom and select Create bucket You need to create another bucket to filter malicious files for later use. Follow and practice steps 1-4 from above, but change the bucket name to s3-malware-gd\nComplete creating S3 bucket For further practices, you can get the Bucket ARN by select the bucket name \u0026ndash;\u0026gt; propertise \u0026ndash;\u0026gt; copy the ARN\n"
},
{
	"uri": "//localhost:1313/5-exportfindingtos3/5.2-attachpolicytos3/",
	"title": "Create Target group for App Tier",
	"tags": [],
	"description": "",
	"content": "Create Target group for App Tier In the EC2 Dashboard, click on Target Groups under Load Balancing at sidebar, and then click on Create target group. In the interface of creating Target group:\nTarget group name fill in AppTierTargetGroup. Protocol: HTTP, Port: 8080 VPC choose my-vpc Scroll down and click Next then click Create target group. Finish creating target group "
},
{
	"uri": "//localhost:1313/2-preparationsteps/",
	"title": "Preparation Steps",
	"tags": [],
	"description": "",
	"content": "In this section, we will setup the necessary and important things to perform this workshop.\nContents Create KMS keys Create S3 Bucket Enable GuardDuty "
},
{
	"uri": "//localhost:1313/6-demo/6.2-checkemailnoification/",
	"title": "Upload Application Source Code to Amazon S3",
	"tags": [],
	"description": "",
	"content": "Upload Application Source Code to Amazon S3 Go to the library-app-fe folder under local, delete the node_modules folder (if any) Access the created S3 bucket, drag and drop the library-app-fe folder and nginx.config file under local to the bucket to upload the folder and file to the bucket. "
},
{
	"uri": "//localhost:1313/6-demo/6.3-checkexportfindings3/",
	"title": "Create EC2 instance",
	"tags": [],
	"description": "",
	"content": "Create EC2 instance Similar to creating an instance for the App server, create an instance for the web server with the following changes:\nInstance name fill in My Web Server 1 Subnet select Public Subnet 1 Security group select WebTier-SG Advanced details, IAM instance profile select ec2role Finally, select Launch instance Complete creating an EC2 instance for the web server "
},
{
	"uri": "//localhost:1313/3-guardduty/3.3-createroleproctection/",
	"title": "Create IAM Protection Role ",
	"tags": [],
	"description": "",
	"content": "Overview In this following step, we have create an IAM role base on the prervious policy for further use to specify Permission in GuardDuty\nIn the IAM interface, select Role from the left navigation bar and Create Role In the Select trusted entity, select Custom Trust Policy Select the following policy pl-gd-s3-raw Next, select Role name in the Role details section. In the Trust Policy, paste the previous Trust Relationship in 3.1 section {\r\u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\r\u0026#34;Statement\u0026#34;: [\r{\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Principal\u0026#34;: {\r\u0026#34;Service\u0026#34;: \u0026#34;malware-protection-plan.guardduty.amazonaws.com\u0026#34;\r},\r\u0026#34;Action\u0026#34;: \u0026#34;sts:AssumeRole\u0026#34;\r}\r]\r} 5. Review the Role and Create new Role: 6. Complete create role "
},
{
	"uri": "//localhost:1313/5-exportfindingtos3/5.3-attachpolicytokms/",
	"title": "Create Internal Load Balancer",
	"tags": [],
	"description": "",
	"content": "Create Internal Load Balancer At EC2 Dashboard, click on Load Balancers from the left-hand menu and then click on Create Load Balancer. In the interface of choosing a load balancer type, select Application Load Balancer and click on Create. In the ALB creation screen:\nLB Name enter app-tier-internal-lb Scheme select Internal In the Network mapping section:\nVPC: my-vpc Tick ap-southeast-1a, then select Private Subnet 1 Tick ap-southeast-1b, then select Private Subnet 2 In the Security groups section, select Internal-LB-SG. In the Listeners and routing section, select AppTierTargetGroup for the default action. Scroll down to the bottom and click on Create load balancer. Complete the load balancer creation for the app tier. "
},
{
	"uri": "//localhost:1313/2-preparationsteps/2.3-enableguardduty/",
	"title": "Enable GuardDuty",
	"tags": [],
	"description": "",
	"content": "Overview In this section, we will dive in enable Amazon GuardDuty in your AWS environment.\nIn the AWS Console navigation bar, type \u0026ldquo;GuardDuty\u0026rdquo; and select the first result. Next, Select GuardDuty All feature to explore the power of GuardDuty. You can select \u0026ldquo;GuardDuty Malware Protection for S3 Only\u0026rdquo; if you want to protect S3 bucket only not the entire AWS services.\nReview Permission, and click on \u0026ldquo;Enable GuardDuty\u0026rdquo; Complete enable Amazone GuardDuty Now that you\u0026rsquo;ve completed all the prerequisites for this workshop, let\u0026rsquo;s dive into the specific services and learn how they integrate with each other.\n"
},
{
	"uri": "//localhost:1313/3-guardduty/",
	"title": "Malware protection for S3",
	"tags": [],
	"description": "",
	"content": "What is Malware protection for S3? Malware Protection for S3 helps detect potential malware by scanning newly uploaded objects in your selected Amazon S3 bucket. When an object or a new version of an existing object is uploaded, GuardDuty automatically initiates a malware scan.\nThis is a new feature for GuardDuty from latest update on June,2024\nContent Enable Malware Protection for S3 Create Policy Protection Create IAM rule Enable Protection "
},
{
	"uri": "//localhost:1313/5-exportfindingtos3/5.4-enableexport/",
	"title": "Create Launch Template",
	"tags": [],
	"description": "",
	"content": "Create Launch Template Launch templates and AMIs (Amazon Machine Images) are both fundamental for launching EC2 instances on AWS, but they serve different purposes:\nAMI (Amazon Machine Image): An AMI is a template that captures the entire software environment of a running EC2 instance. It includes the operating system, applications, configurations, and data volumes. AMIs act as blueprints for creating new instances with the same software setup. You can think of them as pre-configured snapshots of a virtual machine. Launch Template: A launch template defines the configuration details needed to launch an EC2 instance. This includes the AMI ID (which specifies the software environment), instance type (hardware capabilities), security groups (network access rules), user data (scripts to run on instance startup), and other launch parameters. It essentially defines how an instance will be provisioned beyond the base software provided by the AMI. Here\u0026rsquo;s an analogy: Imagine an AMI as a recipe for a cake, specifying the ingredients (operating system, applications). A launch template would be like the baking instructions, including the oven temperature (instance type), baking time, and any additional steps (user data scripts). You can use the same cake recipe (AMI) with different baking instructions (launch templates) to create cakes with variations (different instance configurations).\nCreate Launch Template In the EC2 dashboard, select Launch templates in the sidebar, then click Create launch template In the launch template creation interface, under Launch template name and description, fill in Launch template name as AppTier-LaunchTemplate Under the AMI selection, choose Owned by me then select AppTierImage Choose Instance type as t2.micro Keypair to Don’t include in launch template Network settings:\nSubnet to Don’t include in launch template SG to existing sg, then select AppTier-SG Advanced details, IAM instance profile to ec2role Scroll down to the bottom, select Create launch template. Done! "
},
{
	"uri": "//localhost:1313/3-guardduty/3.4-enableprotection/",
	"title": "Enable Malware Protection",
	"tags": [],
	"description": "",
	"content": "Overview Now let wrap it all, back to GuardDuty Console, you will enable Malware Protection.\nReload, and select role-guardduty-s3-raw that we have created in 3.3 section Completely enable Malware Protection for s3-raw-gd "
},
{
	"uri": "//localhost:1313/4-setupnotification/",
	"title": "Set-up Notification",
	"tags": [],
	"description": "",
	"content": "Set-up Event For Amazon GuardDuty In this section, we will trigger SNS to send and email notification everytime GuardDuty detecte a finding through EventBridge\nContent Create SNS Create EventBridge "
},
{
	"uri": "//localhost:1313/5-exportfindingtos3/",
	"title": "Create Internal Load Balancer and Auto Scaling Group",
	"tags": [],
	"description": "",
	"content": "Introduction In this section, we will create an Internal Load Balancer to balance the traffic from the Web Tier to the App Tier and an Auto Scaling Group for the App Tier.\nContent: Create AMI for App Tier Create Target Group Create Internal Load Balancer Create Launch Template for App Tier Create Auto Scaling Group "
},
{
	"uri": "//localhost:1313/6-demo/",
	"title": "Deploy Web Tier",
	"tags": [],
	"description": "",
	"content": "Introduction In this section, we will deploy the Web Tier by uploading the source code of the application to Amazon S3 and deploying the application on Amazon EC2. In addition, we will use Nginx in this workshop. Nginx will act as a web server that we will configure to run the application on port 80, as well as help redirect API requests from the Web Tier to the App Tier through the Internal Load Balancer.\nContents: Update Nginx Configuration File Upload Application Source Code to Amazon S3 Create EC2 Instance Connect to EC2 Instance "
},
{
	"uri": "//localhost:1313/7-cleanupresources/",
	"title": "Clean Up Resources",
	"tags": [],
	"description": "",
	"content": "Clean Up Resources We will proceed to delete the resources in the following order:\nDelete NAT Gateway Delete Elastic IPs Delete Auto Scaling Group Delete Load Balancer Delete Target group Delete Launch template Delete AMIs Delete EC2 instances Delete Database RDS Delete Route tables\nWe have to delete the subnet associations of each route table first (go to subnet -\u0026gt; table associations -\u0026gt; edit subnet associations -\u0026gt; unchecked the assigned subnets -\u0026gt; save) Delete route table Delete Internet Gateway\ndetach IGW from VPC Delete IGW Delete VPC Delete S3 bucket\nEmpty bucket Delete bucket "
},
{
	"uri": "//localhost:1313/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]